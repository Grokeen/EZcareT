SELECT
   CASE
    WHEN Y.COL_NM IS NULL THEN 'DB ONLY'
    WHEN X.COLUMN_NAME IS NULL THEN '모델 ONLY'
    WHEN REPLACE(x.DATA_TYPE,'(6)','') <> UPPER(y.DATA_TYPE) THEN '데이터 타입 상이'
   END 구분
  ,NVL(X.OWNER, Y.OWNER_NM) OWNER
  ,NVL(X.TABLE_NAME, Y.PHY_TBL_NM) TABLE_NAME
  ,NVL(X.TABLE_NM_KOR, Y.ENT_NM) TABLE_NM_KOR
  ,Y.F_STRU_NM
  ,X.COLUMN_ID, X.COLUMN_NAME, X.COLUMN_NM_KOR, X.DATA_TYPE, X.DATA_LENGTH, X.DATA_PRECISION, X.DATA_SCALE, X.NULLABLE, X.DATA_DEFAULT
  ,Y.SEQ, Y.COL_NM, Y.ATTR_NM, Y.DATA_TYPE DATA_TYP, Y.DATA_LEN, Y.SCALE, Y.PK_YN, Y.NN_YN, Y.DEFT_VAL
  ,CASE WHEN y.PHY_TBL_NM IS NOT NULL THEN CASE WHEN y.tbl_stnd_type = '2' THEN '비표준' ELSE '표준' END END tbl_stnd_type
  ,CASE WHEN y.PHY_TBL_NM IS NOT NULL THEN CASE WHEN y.tbl_stnd_type = '2' THEN '비표준' ELSE CASE WHEN y.col_stnd_type = '2' THEN '비표준' ELSE '표준' END END END col_stnd_type
FROM (
SELECT A.OWNER, A.TABLE_NAME, B.COMMENTS TABLE_NM_KOR
  ,C.COLUMN_ID, C.COLUMN_NAME, D.COMMENTS COLUMN_NM_KOR, C.DATA_TYPE, C.DATA_LENGTH, C.DATA_PRECISION, C.DATA_SCALE, C.NULLABLE, C.DATA_DEFAULT
FROM DBA_TABLES A
LEFT OUTER JOIN DBA_TAB_COMMENTS B ON B.OWNER = A.OWNER
            AND B.TABLE_NAME = A.TABLE_NAME
LEFT OUTER JOIN DBA_TAB_COLUMNS C ON C.OWNER = A.OWNER
            AND C.TABLE_NAME = A.TABLE_NAME
LEFT OUTER JOIN DBA_COL_COMMENTS D ON D.OWNER = C.OWNER
            AND D.TABLE_NAME = C.TABLE_NAME
            AND D.COLUMN_NAME = C.COLUMN_NAME
WHERE A.OWNER IN (SELECT OWNER_NM FROM miga.meta_data_model_info WHERE OWNER_NM IS NOT NULL)
) X FULL OUTER JOIN (
SELECT F_STRU_NM, OWNER_NM, PHY_TBL_NM, ENT_NM, SEQ, COL_NM, ATTR_NM, DATA_TYPE, DATA_LEN, SCALE, PK_YN, NN_YN, DEFT_VAL,tbl_stnd_type,col_stnd_type
FROM miga.meta_data_model_info
WHERE OWNER_NM IS NOT NULL
) Y ON Y.OWNER_NM = X.OWNER
  AND Y.PHY_TBL_NM = X.TABLE_NAME
  AND Y.COL_NM = X.COLUMN_NAME
WHERE NVL(X.OWNER, Y.OWNER_NM) = 'HBIL'
ORDER BY NVL(X.OWNER, Y.OWNER_NM), NVL(X.TABLE_NAME, Y.PHY_TBL_NM), NVL(X.COLUMN_ID, Y.SEQ)
;




